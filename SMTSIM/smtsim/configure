#!/bin/sh
# $Id: configure,v 1.8.6.6.8.2 2009/11/19 01:30:03 jbrown Exp $

prog=`basename $0`
base_dir=`dirname $0`

doexit () {
  exit $1
}

usage () {
  cat 1>&2 <<END
usage: $0

This populates a build directory for compiling SMTSIM for the current system.
Create a directory, and run this script from that directory.  Do not relocate
this script, though.
END
  doexit 1
}

die () {
  echo "$0: die: $@" 1>&2
  doexit 1
}

if [ $# -gt 0 ] ; then
  usage
fi

sysid="`uname -s`-`uname -m`"
case "$sysid" in
Linux-i*86) prof=linux-x86 ;;
Linux-x86_64) prof=linux-amd64 ;;
Linux-ia64) prof=linux-ia64 ;;
FreeBSD-i386) prof=freebsd-x86 ;;
OSF1-alpha) prof=osf-alpha ;;
Darwin-i386) prof=osx-x86 ;;
*)
  die "unrecognized uname output: '$sysid'"
esac

if [ "$base_dir" = "." ] ; then
  src_dir="../src"
  dst_dir="build.${prof}"
  echo "warning: $prog run from top-level directory;"
  echo "  building in $dst_dir instead"
  mkdir -p "$dst_dir" || die "couldn't create $dst_dir"
else
  src_dir="${base_dir}/src"
  dst_dir="."
fi

dst_mfile="${dst_dir}/Makefile"

cat <<END
--------------------
       profile: $prof
    source dir: $src_dir
      dest dir: $dst_dir
--------------------
END

if [ -e "${dst_dir}/main.h" ] ; then
  echo "WARNING: source file main.h found in build directory"
fi
if [ -e "$dst_mfile" ] ; then
  echo "warning: $dst_mfile already exists, moving it to ${dst_mfile}.old"
  mv "$dst_mfile" "$dst_mfile.old" || die "mv failed"
fi

#for subdir in example1 example2/example3 ; do
#  build_sub="${dst_dir}/${subdir}"
#  mkdir -p "$build_sub" || die "couldn't create build subdir '$build_sub'"
#done

echo "creating $dst_mfile"
cat <<-END > "$dst_mfile" || die "error writing $dst_mfile"
	# GNU Makefile, auto-generated by "configure" script

	# SRC_DIR is the path from the build directory to the source files.
	SRC_DIR = $src_dir

	##
	## Set variables which control Makefile behavior, here.
	##

	# EXTRA_LIB_DIRS is used as a list of extra dirs to be searched for libraries.
	# This is very useful for dynamic libraries outside the default search path.
	#EXTRA_LIB_DIRS += /path/to/my/lib1 /dont/forget/my/lib2

	# Statically link the final binary.
	#STATIC_LINK = y

	# To turn debugging or optimizations off by default:
	#DEBUG ?= 
	#OPT ?=

	# Add to default CFLAGS/CXXFLAGS/both
	#EXTRA_CFLAGS = 
	#EXTRA_CXXFLAGS = 
	#EXTRA_COMMON_FLAGS = -march=nocona

	##
	## This includes the main simulator Makefiles.
	##
	include \$(SRC_DIR)/makefile.${prof}

	##
	## Override variables set by the main Makefiles, here.
	##
	
	#CC = my_c_compiler
	#CXX = my_c++_compiler
	#CXX_VERSION_FLAG = -std=c++0x

	END

echo ""
echo "All done; remember to use GNU make."
